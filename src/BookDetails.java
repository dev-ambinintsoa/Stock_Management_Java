
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.ListSelectionModel;
import java.sql.SQLException;
import javax.swing.JComboBox;

/**
 *
 * @author Pankaj Yadav
 */
public class BookDetails extends javax.swing.JFrame {
    Connection con;
    Statement stmt;
    ResultSet rs;
    String query;
    String BId,Bname,Bauthor,strm,cls,avl,av2;
    
    
    
    
    /**
     * Creates new form BookDetails
     */
    public BookDetails() {
        initComponents();
        
        nb.disable();
        
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        model.setRowCount(0);

        
            try
            {
                connect();
                query="select * from books ;";
                rs=stmt.executeQuery(query); 
                while(rs.next())
                {
                    BId=rs.getString("BookID");
                    Bname=rs.getString("BookName");
                    Bauthor=rs.getString("Author");
                    strm=rs.getString("Stream");
                    cls=rs.getString("Class");
                    avl=rs.getString("Available");
                    av2 = rs.getString("Nemprint");
                    Object[] row = {BId,Bname,Bauthor,strm,cls,avl,av2};
                    model.addRow(row);
                }
                disconnect();
            }
            
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e);
            }
            

        }   
        
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        b1 = new javax.swing.ButtonGroup();
        r1 = new javax.swing.JRadioButton();
        r2 = new javax.swing.JRadioButton();
        c1 = new javax.swing.JComboBox<>();
        c2 = new javax.swing.JComboBox<>();
        txt1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        Refrech = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        clear = new javax.swing.JButton();
        c3 = new javax.swing.JComboBox<>();
        c4 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        nb = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        b1.add(r1);
        r1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        r1.setText("Search by Book Name");
        r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1ActionPerformed(evt);
            }
        });

        b1.add(r2);
        r2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        r2.setText("Search By Class");
        r2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2ActionPerformed(evt);
            }
        });

        c1.setForeground(new java.awt.Color(204, 0, 0));
        c1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Stream", "Science", "Commerce", "Arts" }));
        c1.setEnabled(false);
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });

        c2.setForeground(new java.awt.Color(204, 0, 0));
        c2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Class" }));
        c2.setEnabled(false);
        c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2ActionPerformed(evt);
            }
        });

        txt1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txt1.setForeground(new java.awt.Color(204, 0, 0));
        txt1.setEnabled(false);
        txt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt1ActionPerformed(evt);
            }
        });
        txt1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt1KeyReleased(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Id", "Book Name", "Author", "Genre", "Sub_G", "Available", "Nbre "
            }
        ));
        table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setPreferredWidth(40);
            table.getColumnModel().getColumn(1).setPreferredWidth(210);
            table.getColumnModel().getColumn(2).setPreferredWidth(150);
            table.getColumnModel().getColumn(3).setPreferredWidth(40);
            table.getColumnModel().getColumn(4).setPreferredWidth(40);
            table.getColumnModel().getColumn(5).setPreferredWidth(40);
        }

        Refrech.setBackground(new java.awt.Color(0, 102, 102));
        Refrech.setForeground(new java.awt.Color(255, 255, 255));
        Refrech.setText("Refresh");
        Refrech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefrechActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 102, 102));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Home");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 102, 102));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Issue Book");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 102, 102));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Issued Book Details");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Handwriting", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Book Details");

        clear.setBackground(new java.awt.Color(204, 0, 0));
        clear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("Effacer");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        c3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        c3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Stream", "Commerce", "Science", "Arts" }));
        c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c3ActionPerformed(evt);
            }
        });

        c4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        c4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Class" }));
        c4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c4ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Lucida Handwriting", 0, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Formulaire des livres");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Book Id");

        txt2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Book Name");

        txt3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Author");

        txt4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Stream");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Class");

        addButton.setBackground(new java.awt.Color(0, 102, 102));
        addButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        Update.setBackground(new java.awt.Color(0, 102, 102));
        Update.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Update.setForeground(new java.awt.Color(255, 255, 255));
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(204, 0, 0));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Delete");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Preter :");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Fois");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(302, 302, 302)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(r2)
                                    .addComponent(r1))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(89, 89, 89)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(c2, 0, 155, Short.MAX_VALUE)
                                    .addComponent(Refrech, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(143, 143, 143)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(28, 28, 28))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))))
                                        .addGap(53, 53, 53)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt3)
                                            .addComponent(txt4)
                                            .addComponent(c3, 0, 162, Short.MAX_VALUE)
                                            .addComponent(c4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(143, 143, 143)
                                                .addComponent(jLabel7))
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(80, 80, 80)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel8))
                                                .addGap(18, 18, 18)
                                                .addComponent(nb, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel9)))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(48, 48, 48)
                                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(344, 344, 344)
                                .addComponent(txt2)))))
                .addGap(66, 66, 66))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(r1)
                    .addComponent(txt1)
                    .addComponent(Refrech, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(r2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton5)
                    .addComponent(nb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(c3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clear)
                    .addComponent(addButton)
                    .addComponent(Update))
                .addGap(77, 77, 77))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1ActionPerformed
        c1.disable();c2.disable();
        txt1.enable();
    }//GEN-LAST:event_r1ActionPerformed

    private void txt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt1ActionPerformed
        
    }//GEN-LAST:event_txt1ActionPerformed

    private void r2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2ActionPerformed
        txt1.disable();
        c1.enable();
    }//GEN-LAST:event_r2ActionPerformed

    private void c2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2ActionPerformed
        try
        {
           
        connect();
        query="select * from books where stream='"+c1.getSelectedItem()+"' and class='"+c2.getSelectedItem()+"';";
        rs=stmt.executeQuery(query); 
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        model.setRowCount(0);
        while(rs.next())
        {
            BId=rs.getString("BookID");
            Bname=rs.getString("BookName");
            Bauthor=rs.getString("Author");
            strm=rs.getString("Stream");
            cls=rs.getString("Class");
            avl=rs.getString("Available");
            av2 = rs.getString("Nemprint");
            Object[] row = {BId,Bname,Bauthor,strm,cls,av2};
            model.addRow(row);
        }
        disconnect();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e);
        }
    }//GEN-LAST:event_c2ActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        c2.enable();
        if(c1.getSelectedItem()=="Science")
        {
            c2.removeAllItems();
            c2.addItem("Select Class");c2.addItem("FYBScCS");c2.addItem("SYBScCS");c2.addItem("TYBScCS");
        }
        if(c1.getSelectedItem()=="Arts")
        {
            c2.removeAllItems();
            c2.addItem("Select Class");c2.addItem("FYBA");c2.addItem("SYBA");c2.addItem("TYBA");
        }
        if(c1.getSelectedItem()=="Commerce")
        {
            c2.removeAllItems();
            c2.addItem("Select Class");c2.addItem("FYBCom");c2.addItem("SYBCom");c2.addItem("TYBCom");
        }
    }//GEN-LAST:event_c1ActionPerformed

    private void txt1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt1KeyReleased
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        model.setRowCount(0);
        String txt=txt1.getText();
        if(txt.equals(""))
            System.out.println("");
        else
        {
            try
            {
                connect();
                query="select * from books where BookName LIKE \"%"+txt1.getText()+"%\";";
                rs=stmt.executeQuery(query); 
                while(rs.next())
                {
                    BId=rs.getString("BookID");
                    Bname=rs.getString("BookName");
                    Bauthor=rs.getString("Author");
                    strm=rs.getString("Stream");
                    cls=rs.getString("Class");
                    avl=rs.getString("Available");
                    av2 = rs.getString("Nemprint");
                    Object[] row = {BId,Bname,Bauthor,strm,cls,av2};
                    model.addRow(row);
                }
                disconnect();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e);
            }
        }   
    }//GEN-LAST:event_txt1KeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        MainLayer mn=new MainLayer();
        mn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        IssueBook ib=new IssueBook();
        ib.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        IssuedBooks ibs=new IssuedBooks();
        ibs.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        txt2.setText("");
        txt3.setText("");
        txt4.setText("");
        c3.setSelectedIndex(0);
        c4.removeAllItems();
        c4.addItem("Select Class");
    }//GEN-LAST:event_clearActionPerformed

    private void c3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c3ActionPerformed
        if(c3.getSelectedItem()=="Science")
        {
            c4.removeAllItems();
            c4.addItem("Select Class");c4.addItem("FYBScCS");c4.addItem("SYBScCS");c4.addItem("TYBScCS");
        }
        if(c3.getSelectedItem()=="Arts")
        {
            c4.removeAllItems();
            c4.addItem("Select Class");c4.addItem("FYBA");c4.addItem("SYBA");c4.addItem("TYBA");
        }
        if(c3.getSelectedItem()=="Commerce")
        {
            c4.removeAllItems();
            c4.addItem("Select Class");c4.addItem("FYBCom");c4.addItem("SYBCom");c4.addItem("TYBCom");
        }
    }//GEN-LAST:event_c3ActionPerformed

    private void c4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c4ActionPerformed

    }//GEN-LAST:event_c4ActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if(txt2.getText().equals(""))
        JOptionPane.showMessageDialog(this,"Please enter Book id");
        else if(txt3.getText().equals(""))
        JOptionPane.showMessageDialog(this,"Please enter Book name");
        else if(txt3.getText().equals(""))
        JOptionPane.showMessageDialog(this,"Please enter author name");
        else if(c3.getSelectedItem().equals("Select Stream"))
        JOptionPane.showMessageDialog(this,"Please select stream");
        else if(c4.getSelectedItem().equals("Select Class"))
        JOptionPane.showMessageDialog(this,"Please select class");
        else
        {
            try
            {
                connect();
                query="insert into books values('"+txt2.getText()+"','"+txt3.getText()+"','"+txt4.getText()+"','"+c3.getSelectedItem()+"','"+c4.getSelectedItem()+"','YES');";
                stmt.executeUpdate(query);

                disconnect();
                JOptionPane.showMessageDialog(this,"New book added to Library");
                txt2.setText("");
                txt3.setText("");
                txt4.setText("");
                c3.setSelectedIndex(0);
                c4.removeAllItems();
                c4.addItem("Select Class");

            }
            catch(SQLException e)
            {
                if(e.getErrorCode()==1062)
                JOptionPane.showMessageDialog(this,"BookId is a primary key\nduplicate entry is not allowed\nit should be unique");
                else{

                    JOptionPane.showMessageDialog(this,e);

                }
            }
        }

    }//GEN-LAST:event_addButtonActionPerformed

    private void RefrechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefrechActionPerformed
DefaultTableModel model=(DefaultTableModel)table.getModel();
        model.setRowCount(0);

        
            try
            {
                connect();
                query="select * from books ;";
                rs=stmt.executeQuery(query); 
                while(rs.next())
                {
                    BId=rs.getString("BookID");
                    Bname=rs.getString("BookName");
                    Bauthor=rs.getString("Author");
                    strm=rs.getString("Stream");
                    cls=rs.getString("Class");
                    avl=rs.getString("Available");
                    av2 = rs.getString("Nemprint");
                    Object[] row = {BId,Bname,Bauthor,strm,cls,avl,av2};
                    model.addRow(row);
                }
                disconnect();
                
                
            }
            
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e);
            }
    }//GEN-LAST:event_RefrechActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        
        int row = table.getSelectedRow();
        String valuer = (table.getModel().getValueAt(row, 0)).toString();
        String nomlivre = (table.getModel().getValueAt(row, 1)).toString();
        String author = (table.getModel().getValueAt(row, 2)).toString();
        String stream = (table.getModel().getValueAt(row, 3)).toString();
        String class1 = (table.getModel().getValueAt(row, 4)).toString();
        
       
                if(txt2.getText().equals(""))
        JOptionPane.showMessageDialog(this,"Please enter Book id");
        else if(txt3.getText().equals(""))
        JOptionPane.showMessageDialog(this,"Please enter Book name");
        else if(txt3.getText().equals(""))
        JOptionPane.showMessageDialog(this,"Please enter author name");
        else if(c3.getSelectedItem().equals("Select Stream"))
        JOptionPane.showMessageDialog(this,"Please select stream");
        else if(c4.getSelectedItem().equals("Select Class"))
        JOptionPane.showMessageDialog(this,"Please select class");
        else
        {
            try
            {
                connect();
                query = "UPDATE `books` SET `bookid`='"+valuer+"',bookname='"+txt3.getText()+"',author='"+txt4.getText()+"',stream='"+ c3.getSelectedItem() +"',class='"+c4.getSelectedItem()+"' WHERE bookid = " + valuer;
               // query="UPDATE books set bookname = '"+nomlivre+"' , author= '"+author+"' , stream='"+ stream +"' , class = '"+class1+"' WHERE bookid=" + valuer;
                stmt.executeUpdate(query);
                disconnect();
                
                JOptionPane.showMessageDialog(this,"Livre editer avec succes");
                txt2.setText("");
                txt3.setText("");
                txt4.setText("");
                c3.setSelectedIndex(0);
                c4.removeAllItems();
                c4.addItem("Select Class");

            }
            catch(SQLException e)
            {

                    JOptionPane.showMessageDialog(this,e);

                
            }
        }
        
        
    }//GEN-LAST:event_UpdateActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        int row = table.getSelectedRow();
        
        String valuer = (table.getModel().getValueAt(row, 0)).toString();
        String nomlivre = (table.getModel().getValueAt(row, 1)).toString();
        String author = (table.getModel().getValueAt(row, 2)).toString();
        String stream = (table.getModel().getValueAt(row, 3)).toString();
        String class1 = (table.getModel().getValueAt(row, 4)).toString();
        
        
                txt2.setText(valuer);
                txt3.setText(nomlivre);
                txt4.setText(author);        
                if (stream == "Commerce" ){
                c3.setSelectedIndex(1);
                }else if (stream == "Science" ){
                c3.setSelectedIndex(2);
                }else if (stream == "Arts" ){
                c3.setSelectedIndex(3);
                }
                c4.addItem("Select Class");
                
                        
            try
            {
                connect();
                    
                query="select * from books  where bookid = " + valuer;
                rs=stmt.executeQuery(query); 
                while(rs.next())
                {
                   String nb1 =rs.getString("nemprint");
                   nb.setText(nb1);
                }
                disconnect();
            }
            
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e);
            }
    }//GEN-LAST:event_tableMouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int row = table.getSelectedRow();
        String valuer = (table.getModel().getValueAt(row, 0)).toString();
                    try
            {

                connect();
                query="delete from books where bookid=" + valuer;
                stmt.executeUpdate(query);

                disconnect();
                JOptionPane.showMessageDialog(this,"Supprimer Avec succes");
                txt2.setText("");
                txt3.setText("");
                txt4.setText("");
                c3.setSelectedIndex(0);
                c4.removeAllItems();
                c4.addItem("Select Class");

            }
            catch(SQLException e)
            {
              
                    JOptionPane.showMessageDialog(this,e);
            }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookDetails().setVisible(true);
            }
        });
    }
    public void connect()
    {
        try
        {  
             Class.forName("com.mysql.jdbc.Driver");
             con=DriverManager.getConnection("jdbc:mysql://localhost:3306/projectdb?","root","");   
            stmt=con.createStatement(); 
        }
        catch(Exception e)
        { 
            System.out.println(e);
            JOptionPane.showMessageDialog(this,"connection error");
        }
    }
    public void disconnect()
    {
        try
        {
           con.close(); 
        }
        catch(Exception e)
        {}

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Refrech;
    private javax.swing.JButton Update;
    private javax.swing.JButton addButton;
    private javax.swing.ButtonGroup b1;
    private javax.swing.JComboBox<String> c1;
    private javax.swing.JComboBox<String> c2;
    private javax.swing.JComboBox<String> c3;
    private javax.swing.JComboBox<String> c4;
    private javax.swing.JButton clear;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nb;
    private javax.swing.JRadioButton r1;
    private javax.swing.JRadioButton r2;
    private javax.swing.JTable table;
    private javax.swing.JTextField txt1;
    private javax.swing.JTextField txt2;
    private javax.swing.JTextField txt3;
    private javax.swing.JTextField txt4;
    // End of variables declaration//GEN-END:variables
}
